#!/bin/sh

get_miner_params() {
    local miner_type=$1

    case $miner_type in
        M0)
            chip_num=66
            CGMINERFILE="cgminer.m0"
            CGMINERDEFAULTFILE="cgminer.default.m0"
            POWERSFILE="powers.m0"
            ;;
        M1)
            chip_num=66
            CGMINERFILE="cgminer.m1"
            CGMINERDEFAULTFILE="cgminer.default.m1"
            POWERSFILE="powers.m1"
            ;;
        M1s)
            chip_num=60
            CGMINERFILE="cgminer.m1s"
            CGMINERDEFAULTFILE="cgminer.default.m1s"
            POWERSFILE="powers.m1s"
            ;;
        M2)
            chip_num=38
            CGMINERFILE="cgminer.m2"
            CGMINERDEFAULTFILE="cgminer.default.m2"
            POWERSFILE="powers.m2"
            ;;
        M3)
            case $hash_board_version in
                HB10)
                    chip_num=63
                    CGMINERFILE="cgminer.m3.v10"
                    CGMINERDEFAULTFILE="cgminer.default.m3.v10"
                    POWERSFILE="powers.m3.v10"
                    ;;
                HB11)
                    chip_num=66
                    CGMINERFILE="cgminer.m3.v11"
                    CGMINERDEFAULTFILE="cgminer.default.m3.v11"
                    POWERSFILE="powers.m3.v11"
                    ;;
                HB12)
                    chip_num=63
                    CGMINERFILE="cgminer.m3.v12"
                    CGMINERDEFAULTFILE="cgminer.default.m3.v12"
                    POWERSFILE="powers.m3.v12"
                    ;;
                HB14)
                    chip_num=63
                    CGMINERFILE="cgminer.m3.v14"
                    CGMINERDEFAULTFILE="cgminer.default.m3.v14"
                    POWERSFILE="powers.m3.v14"
                    ;;
                HB15)
                    chip_num=63
                    CGMINERFILE="cgminer.m3.v15"
                    CGMINERDEFAULTFILE="cgminer.default.m3.v15"
                    POWERSFILE="powers.m3.v15"
                    ;;
                HB20)
                    chip_num=63
                    CGMINERFILE="cgminer.m3.v20"
                    CGMINERDEFAULTFILE="cgminer.default.m3.v20"
                    POWERSFILE="powers.m3.v20"
                    ;;
                *)
                    chip_num=63
                    ;;
            esac
            ;;
        *)
            miner_type="unknown"
            chip_num=63
            ;;
    esac
}

force_miner_type=$1

if [ "$force_miner_type" != "" ]; then
    logger "force_miner_type $force_miner_type"
fi

#
# Common script to detect the miner info.
#

# Detect control board type and version
. /etc/cpuinfo_sun8i
if [ "$CPUINFO_SUN8I" != "" ]; then
    control_board_type="H3"
    control_board_version="CB20"
else
    control_board_type="ZYNQ"

    memsize=`cat /proc/meminfo | grep MemTotal | awk '{print $2}'`
    if [ $memsize -le 262144 ]; then
        control_board_version="CB12"
    else
        control_board_version="CB10"
    fi
fi

# Detect miner type and hash board version
# /tmp/eeprom_data_out was generated by detect-eeprom-data
if [ -f /tmp/eeprom_data_out ]; then
    source /tmp/eeprom_data_out

    miner_type_lowcase=`echo $miner_type | tr 'A-Z' 'a-z'`
    config_file_suffix="$miner_type_lowcase.v$pcb_version"

    CGMINERFILE="cgminer.$config_file_suffix"
    CGMINERDEFAULTFILE="cgminer.default.$config_file_suffix"
    POWERSFILE="powers.$config_file_suffix"
else
    source /usr/bin/miner-detect-by-legacy $force_miner_type

    if [ "$alternative_miner_type" != "" ]; then
        get_miner_params $alternative_miner_type
        echo $alternative_miner_type > /tmp/alternative_miner_type
        echo $chip_num > /tmp/alternative_miner_chip_num
    fi

    get_miner_params $miner_type
fi

if [ ! -f /etc/config/$CGMINERFILE ]; then
    CGMINERFILE="cgminer.common"
fi
if [ ! -f /etc/config/$CGMINERDEFAULTFILE ]; then
    CGMINERDEFAULTFILE="cgminer.default.common"
fi
if [ ! -f /etc/config/$POWERSFILE ]; then
    POWERSFILE="powers.common"
fi
if [ "$FANSFILE" = "" ] || [ ! -f /etc/config/$FANSFILE ]; then
    FANSFILE="fans.common"
fi

# Detect power supply version
power_version=`readpower -v | grep 'Power version'`
if [ "$power_version" = "Power version = 00 01 07" ]; then
    power_type="P5"
elif [ "$power_version" = "Power version = 00 01 06" ]; then
    power_type="P3"
elif [ "$power_version" = "Power version = 00 01 05" ]; then
    power_type="P2"
elif [ "$power_version" = "Power version = 00 00 04" ]; then
    power_type="P1"
else
    if [ "$miner_type" = "M0" ]; then
        power_type="P0"
    else
        power_type="PX"
    fi
fi

# Detect firmware version
if [ -f /etc/microbt_release ]; then
    firmware_version=`cat /etc/microbt_release | grep FIRMWARE_VERSION | awk -F '=' '{print $2}'`
    firmware_version=`echo ${firmware_version:1}`
    firmware_version=`echo ${firmware_version%\'*}`

    if [ "$control_board_type" = "H3" ]; then
        boot_part=`cat /proc/cmdline | grep boot_part`
        if [ "$boot_part" = "" ]; then
            firmware_version=`echo OLD-$firmware_version`
        fi
    fi
else
    firmware_version="unknown"
fi
